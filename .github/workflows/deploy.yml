name: Deploy to GitHub Pages

on:
  # 当推送到 master 分支时触发
  push:
    branches: ['master']

  # 允许手动触发工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 权限以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 允许只有一个并发部署，跳过正在运行的部署与最新排队的部署之间的运行。
# 但是，不要取消正在进行的运行，因为我们希望让这些生产部署完成。
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 构建工作
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # 如果你的站点不在仓库根目录，请在这里指定路径
          static_site_generator: next

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # 基于依赖项生成新的缓存
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # 如果源文件改变但依赖项没有改变，则恢复之前的缓存
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

      - name: Install dependencies
        run: npm ci

      - name: Build static export with Next.js
        run: |
          export GITHUB_ACTIONS=true
          npm run build:static

      - name: Prepare Pages artifact (ensure out exists)
        run: |
          if [ ! -d "out" ] && [ -d ".next/export" ]; then
            echo "Creating out/ from .next/export ..."
            cp -R .next/export out
          fi
          if [ -d "out" ]; then
            echo "out/ is ready."
          else
            echo "out/ still missing. Listing .next for debugging:"
            ls -la .next || true
            echo "If you see no .next/export, Next.js may have changed layout."
            echo "Proceeding by uploading .next directory for GitHub Pages Next integration."

            echo "Attempting to synthesize out/ from .next/server/app + .next/static + public ..."
            mkdir -p out
            if [ -d ".next/server/app" ]; then
              # Copy HTML files preserving relative structure
              (cd .next/server/app && find . -type f -name '*.html' -print0 | xargs -0 -I{} sh -c 'mkdir -p "../../out/$(dirname {})" && cp "{}" "../../out/{}"') || true
            fi
            # Copy static assets
            if [ -d ".next/static" ]; then
              mkdir -p out/_next
              cp -R .next/static out/_next/static || true
            fi
            # Copy public assets
            if [ -d "public" ]; then
              cp -R public/* out/ 2>/dev/null || true
            fi

            echo "Synthesis done. Verifying out/:"
            ls -la out || true
          fi

      - name: List build output
        run: |
          echo "Checking build output directory:"
          ls -la .
          if [ -d "out" ]; then
            echo "out directory exists, contents:"
            ls -la out/
          else
            echo "out directory does not exist"
          fi
          if [ -d ".next" ]; then
            echo ".next directory exists, contents:"
            ls -la .next/
          fi

      - name: Upload artifact (Next.js build output)
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # 部署工作
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4